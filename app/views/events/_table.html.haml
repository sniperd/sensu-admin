%table.table.table-striped{:id => "primary_events_table"}
  %thead
    %th Status 
    %th ENV
    %th Client
    %th Check
    %th Output
    %th{:filter => "false"} Action
    %th{:filter => "false"} Occurred
    %th{:filter => "false"} #
    %th{:filter => "false"}
      
  %tbody
    - @events.each_with_index do |event,i|
      %tr.events{:id => "row-event-#{i}", :rel => "#event-#{i}", :type => "#{event.status}"}
        %td.moreinfo
          / TODO: Make this into a helper that renders using haml_tag
          - if event.status == 1
            %span.badge.badge-warning
              = format_status(event.status)
          - elsif event.status == 2
            %span.badge.badge-important
              = format_status(event.status)
          - else
            %span.badge.badge-inverse
              = format_status(event.status)
        %td.moreinfo= event.client_attributes['environment']
        %td.moreinfo= format_output(event.client, 12)
        %td.moreinfo= event.check
        %td.moreinfo{:title => "Check Output", 'data-content' => event.output}
          = format_output(event.output)
        %td{:rel => "#{event.client}_popup_info", :title => "Check Silence", 'data-content' => silenced_output(event.check_silenced, event.client_silenced)}
          %div.btn-group
            %button.btn.btn-info.dropdown-toggle{'data-toggle' => 'dropdown'}
              %div{:style => "width: 25px"}
                %div{:style => "float: left;"}
                  - display_silenced(event, i)
                %div{:style => "float: right;"}
                  %span.caret
            %ul.dropdown-menu
              %li
                %a.silence-event{:control => "silence_#{event.client}", :index_id => "#{i}", :hidden => not_nil?(event.client_silenced), :misc => "#{event.client}", :rel => "/events/#{event.client}/silence", :href => "#"} Silence Client
              %li
                %a.unsilence-submit-event{:control => "unsilence_#{event.client}", :index_id => "#{i}", :hidden => is_nil?(event.client_silenced), :misc => "#{event.client}", :rel => "/events/#{event.client}/unsilence", :href => "#"} UnSilence Client
              %li
                %a.silence-event{:control => "silence_#{event.client}_#{event.check}", :index_id => "#{i}", :hidden => not_nil?(event.check_silenced), :misc => "#{event.client}_#{event.check}", :rel => "/events/#{event.client}/#{event.check}/silence", :href => "#"} Silence Check
              %li
                %a.unsilence-submit-event{:control => "unsilence_#{event.client}_#{event.check}", :index_id => "#{i}", :hidden => is_nil?(event.check_silenced), :misc => "#{event.client}_#{event.check}", :rel => "/events/#{event.client}/#{event.check}/unsilence", :href => "#"} UnSilence Check
              %li
                %a.resolve-event{:misc => "#row-event-#{i}", :index_id => "#{i}", :rel => "/events/#{event.client}/#{event.check}/resolve"} Resolve
        %td.moreinfo= time_ago_in_words(Time.at(event.issued)) + " ago"
        %td.moreinfo= event.occurrences
        %td.moreinfo
          %i.icon-zoom-in
